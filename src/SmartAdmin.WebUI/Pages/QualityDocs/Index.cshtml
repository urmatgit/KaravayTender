@page
@using CleanArchitecture.Razor.Domain.Enums
@using CleanArchitecture.Razor.Application.Constants.Permission
@model SmartAdmin.WebUI.Pages.QualityDocs.IndexModel
@inject Microsoft.Extensions.Localization.IStringLocalizer<IndexModel> _localizer
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService _authorizationService
@{
	ViewData["Title"] = _localizer["Quality documents"].Value;
	ViewData["PageName"] = "qualityDocs_index";
	ViewData["Category1"] = _localizer["References"].Value;
	ViewData["Heading"] = _localizer["Quality documents"].Value;
	ViewData["PageDescription"] = _localizer["Managing supplier referral parameters"].Value;
	ViewData["PreemptiveClass"] = "Default";
	var _canCreate = await _authorizationService.AuthorizeAsync(User, null, Permissions.QualityDocs.Create);
	var _canEdit = await _authorizationService.AuthorizeAsync(User, null, Permissions.QualityDocs.Edit);
	var _canDelete = await _authorizationService.AuthorizeAsync(User, null, Permissions.QualityDocs.Delete);
	var _canSearch = await _authorizationService.AuthorizeAsync(User, null, Permissions.QualityDocs.Search);
	
	var _canExport = await _authorizationService.AuthorizeAsync(User, null, Permissions.QualityDocs.Export);

}
@section HeadBlock {

	<link rel="stylesheet" media="screen, print" href="~/css/formplugins/bootstrap-daterangepicker/bootstrap-daterangepicker.css">
	<link rel="stylesheet" media="screen, print" href="~/css/fa-solid.css">
	<link rel="stylesheet" media="screen, print" href="~/css/theme-demo.css">
	<link rel="stylesheet" media="screen,print" href="~/lib/easyui/themes/insdep/easyui.css">
	@*<link rel="stylesheet" media="screen, print" href="~/css/formplugins/summernote/summernote.css">*@
	<style>

		.main_dg_datagrid-cell-c1-_action {
			overflow: visible !important
		}
	</style>
}
<div id="js-page-content-demopanels" class="card mb-g">
	<div class="card-header bg-white d-flex align-items-center">
		<h4 class="m-0">
			@_localizer["Quality documents"]
			<small>@_localizer["See all available options"]</small>
		</h4>
		<div class="ml-auto">
			@if (_canCreate.Succeeded)
			{
				<button class="btn btn-sm btn-outline-primary " id="addbutton">
					<span class="@(Settings.Theme.IconPrefix) fa-plus mr-1"></span>
					@_localizer["Add"]
				</button>
			}
			@if (_canDelete.Succeeded)
			{
				<button class="btn btn-sm btn-outline-danger" disabled id="deletebutton">
					<span class="@(Settings.Theme.IconPrefix) fa-trash-alt mr-1"></span>
					@_localizer["Delete"]
				</button>
			}
			@if (_canSearch.Succeeded)
			{
				<button class="btn btn-sm btn-outline-primary " id="searchbutton">
					<span class="@(Settings.Theme.IconPrefix) fa-search mr-1"></span>
					@_localizer["Search"]
				</button>
			}
			@*@if (_canImport.Succeeded)
				{
				<div class="btn-group" role="group">
					<button id="importbutton" type="button" class="btn btn-sm  btn-outline-primary waves-effect waves-themed">
						<span class="@(Settings.Theme.IconPrefix) fa-upload mr-1"></span>   @_localizer["Import Excel"]
					</button>
					<button type="button" class="btn btn-sm btn-outline-primary dropdown-toggle dropdown-toggle-split waves-effect waves-themed" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<span class="sr-only">Toggle Dropdown</span>
					</button>
					<div class="dropdown-menu" aria-labelledby="importbutton">
						<button id="gettemplatebutton" class="dropdown-item">@_localizer["Download Template"]</button>
					</div>
				</div>
				}*@
			@if (_canExport.Succeeded)
			{
				<button class="btn btn-sm btn-outline-primary " id="exportbutton">
					<span class="@(Settings.Theme.IconPrefix) fa-download mr-1"></span>
					@_localizer["Export Excel"]
				</button>
			}
		</div>
	</div>
	<div class="card-body">
		<div class="row">
			<div class="col-md-12">
				<table id="main_dg">
				</table>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="edit_modal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Modal title</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
				</button>
			</div>
			<form id="edit_form" class="needs-validation" novalidate="novalidate">
				<div class="modal-body">
					@Html.AntiForgeryToken()
					<input type="hidden" asp-for="Input.Id" />
					<div class="form-row">
						<div class="col-md-12">
							<label class="form-label" for="name">@_localizer["Name"] <span class="text-danger">*</span></label>
							<input type="text" asp-for="Input.Name" class="form-control" placeholder='@_localizer["Name"]' />
							<span class="invalid-feedback" asp-validation-for="Input.Name"></span>
						</div>

						@*<div class="col-md-12">
							<label class="form-label" for="Contents">@_localizer["Content"] </label>
							<textarea asp-for="Input.Content" class="form-control summernote" placeholder="Contents"></textarea>
							<span class="invalid-feedback" asp-validation-for="Input.Content"></span>

						</div>*@

					</div>
                    <div class="form-row">
                        <div class="col-md-12">
                            <label class="form-label" for=""> <span class="text-danger">*</span></label>
                            <input type="file" asp-for="UploadedFile" style="display:none" required />
                            <div class="">
                                <button name="uploadbutton" type="button" class="btn btn-primary btn-icon waves-effect waves-themed mr-2">
                                    <i class="fal fa-paperclip"></i>
                                </button><span class="text-danger">*</span>
                                <div id="uploadfilename">
                                    <div class="alert alert-danger mt-2 mb-2" role="alert">
                                        <i class="fal fa-exclamation-triangle mr-2"></i>   @_localizer["Please upload a file"].
                                    </div>
                                </div>

                            </div>
                            <span class="invalid-feedback" asp-validation-for="UploadedFile">Загрузите файл!</span>
							</div>
                        </div>
                    </div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">@_localizer["Close"]</button>
					<button type="submit" class="btn btn-primary">@_localizer["Save"]</button>
				</div>
			</form>
		</div>
	</div>
</div>
@await Component.InvokeAsync("ImportExcel", new
{
	importUri = Url.Page("/QualityDocs/Index") + "?handler=Import",
getTemplateUri = @Url.Page("/QualityDocs/Index") + "?handler=CreateTemplate",
onImportedSucceeded = "reloadData()"
})
@section ScriptsBlock {
	<partial name="_ValidationScriptsPartial" />
	<partial name="_EasyUIScriptsPartial" />
	@*<script type="text/javascript" src="~/lib/easyui/jquery.easyui.min.js" asp-append-version="true"></script>
		<script type="text/javascript" src="~/lib/easyui/plugins/datagrid-filter.js" asp-append-version="true"></script>
		<script type="text/javascript" src="~/lib/easyui/jquery.easyui.component.js" asp-append-version="true"></script>*@

	<script>jQuery.fn.tooltip = bootstrapTooltip;</script>
	<script src="~/lib/axios/dist/axios.js"></script>
	<script src="~/lib/jquery-form/jquery.jsonToForm.js"></script>
	@*<script src="~/js/formplugins/summernote/summernote.js"></script>*@
	<script src="~/js/TableBase.js"></script>
  
    <script type="text/javascript">
        var pagelink = '@Url.Page("/QualityDocs/Index")';
        var translations = {
            SaveSuccess: '@_localizer["Save Success."]',
            SaveFail: '@_localizer["Save fail"]',
            IconPrefix: '@(Settings.Theme.IconPrefix)',
            Command: '@_localizer["Command"]',
            Edit: '@_localizer["Edit"]',
            Delete: '@_localizer["Delete"]',
            AddCaption: '@_localizer["Add Quality document"]',
            EditCaption: '@_localizer["Edit Quality document"]',
            DeleteRowDialog: '@_localizer["Are you sure delete a row?"]',
			Yes: '@_localizer["Yes"]',
			No: '@_localizer["No"]',
            DeleteSuccess: '@_localizer["Delete Success"]',
            DeleteFail: '@_localizer["Delete fail"]',
			DeleteRowsDialog: '@_localizer["Are you sure delete checked rows?"]',
            Success: '@_localizer["Success"]',
            ExportFail: '@_localizer["Export fail"]',
            Name: '@_localizer["Name"]',
		}
		var _canEdit = @(_canEdit.Succeeded ? "true":"false" );
		var _canDelete =  @(_canDelete.Succeeded ? "true" : "false" );
		 var uploadfilename = document.querySelector("#uploadfilename");
        var uploadbutton = document.querySelector("button[name='uploadbutton']");
        var uploadfileinput = document.getElementById("UploadedFile");
        var savebutton = document.querySelector("button[name='savebutton']");
        uploadbutton.addEventListener('click', (e) => {
            uploadfileinput.click();
        })
        uploadfileinput.onchange = () => {
            fileName = uploadfileinput.value.split('\\').pop();
            uploadfilename.innerHTML = `
              <div class="alert alert-info alert-dismissible fadeup show mb-2 mt-2" role="alert">
                     <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                         <span aria-hidden="true"><i class="@(Settings.Theme.IconPrefix) fa-times"></i></span>
                      </button>
                      <div class="d-flex align-items-center">
							<div class="alert-icon">
									<i class="@(Settings.Theme.IconPrefix) fa-upload fs-xl"></i>
							</div>
							<div class="flex-1">
	    							${fileName}
							</div>
					</div>
             </div>
        `
            savebutton.disabled = false;
            $('#uploadfilename .alert').on('closed.bs.alert', (e) => {
                uploadfileinput.value = null;
                savebutton.disabled = true;
            })
		};
         popupmodal = (nomenclature) => {
            $('#edit_modal').modal('toggle');
            $('#edit_modal .modal-title').html(`${translations.AddCaption}`);
            $('#edit_form').clearForm();
            $('#edit_form')[0].reset();
            currentEditRow = nomenclature;
			 if (nomenclature) {
				 uploadbutton.disabled = false;
                uploadfileinput.required = true;
				 let url = nomenclature.URL ? omenclature.URL.replaceAll('\\', '/') : '';
                uploadfilename.innerHTML = `
                  <div class="alert alert-info alert-dismissible fadeup show mb-2 mt-2" role="alert">
                         <div class="d-flex align-items-center">
<button type="button" name="download_files" title="Загрузить файл" class="btn btn-sm btn-outline-primary" onclick="onDownload('${url}')" >
                            <i class="${window.translations.IconPrefix} fa-download" ></i>
							</button>
							
						
							<div class="flex-1" style="margin-left:12px">
	    							${nomenclature.URL}
							</div>
					</div>
                </div>
                `
                $('#edit_modal .modal-title').html(`${translations.EditCaption}`);
                if (typeof jsonToFormCallBack !== 'undefined')
                    $('#edit_form').jsonToForm(nomenclature, jsonToFormCallBack);
                else
                    $('#edit_form').jsonToForm(nomenclature);
            } else {
                $('#edit_form #Input_Id').val(0)
                if (typeof clienUploadfilename == 'function')
                    clienUploadfilename();
                if (typeof OnNewRow == 'function')
					 OnNewRow();
				  uploadbutton.disabled = false;
                uploadfileinput.required = true;

                uploadfilename.innerHTML =`<div class="alert alert-danger mt-2 mb-2" role="alert">
                                        <i class="fal fa-exclamation-triangle mr-2"></i>   @_localizer["Please upload a file"].
                             </div>`
            }
		}
		var onDownload = (index) => {
			let url = "";
			if (typeof index == "string")
				url = index;
			else {
				const item = $dg.datagrid('getRows')[index];
				url = item.URL;
			}
            const filename = getFileName(url);
            const link = document.createElement('a');
            link.href = url;
            link.setAttribute('download', filename);
            document.body.appendChild(link);
            link.click();
            toastr["info"](`@_localizer["Файл загружен"]`);
		}
        function createColumns() {
            var InitColumns =
                [
                    { field: 'ck', checkbox: true },
                    {
                        field: '_action',
                        title: `${window.translations.Command} `,
                        width: 100,
                        align: 'center',
                        formatter: function (value, row, index) {
                            return `<div class="btn-group" role="group">
								  <button id="commandbtngroup" type="button" ${(_canEdit ? "" : "disabled")}  class="btn btn-outline-primary btn-sm dropdown-toggle waves-effect waves-themed" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
									<i class="${window.translations.IconPrefix} fa-edit"></i>
								 </button>
								 <div class="dropdown-menu dropdown-menu-animated" aria-labelledby="commandbtngroup">
								   <button class="dropdown-item" onclick="onEdit(${index})" ${(_canEdit ? "" : "disabled")}><i class="fal fa-edit mr-1"></i> ${translations.Edit}</button>
								  <button class="dropdown-item" onclick="onDownload(${index})"><i class="fal fa-download mr-1"></i> @_localizer["Download"]</button>
								   <button class="dropdown-item" onclick="onDelete('${row.Id}')" ${(_canDelete ? "" : "disabled")} ><i class="fal fa-trash-alt mr-1"></i> ${translations.Delete}</button>
								 </div>
							  </div>`;
                        }
                    }




                ];
            if (tblColumns.length > 0) {
                return InitColumns.concat(tblColumns);
            }
            return InitColumns;
        };
		$(() => {
			//columns.push([{ field: 'Name', title: '@_localizer["Name"]', sortable: true, width: 180 }]);
			tblColumns = [{ field: 'Name', title: `${window.translations.Name} `, sortable: true, width: 300 }];
			initdatagrid();
            //$('.summernote').summernote({
            //    focus: true,
            //    height: (window.innerHeight / 2),
            //    toolbar: [
            //        ['style', ['bold', 'italic', 'underline', 'clear']],
            //        ['fontsize', ['fontsize']],
            //        ['color', ['color']],
            //        ['para', ['ul', 'ol', 'paragraph']],
            //        ["view", ["fullscreen", "codeview"]]
            //    ]
            //});
		})
    </script>
}
